#### Usando 2 appenders, 1 para logar no console, outro para um arquivo

log4j.rootCategory=info,stdout,fileOut

# Imprime somente mensagens com priority INFO ou mais alto para o logger

# ORDEM PgRIODRIDADES: DEBUG - INFO - WARN - ERROR - FATAL


log4j.category.bases=debug
log4j.category.scripts=debug
log4j.category.pages=debug



#### O primeiro appender escreve no console

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

### Pattern que mostra o nome do arquivo e numero da linha, porem sem data e hora

log4j.appender.stdout.layout.ConversionPattern=%d [%t] %5p %F\:%L - %m%n

#### O segundo appender escreve em um arquivo e faz um bkp ao atingir o max

log4j.appender.fileOut=org.apache.log4j.RollingFileAppender

log4j.appender.fileOut.File=log.txt

### Controla o tamanho maximo do arquivo
log4j.appender.fileOut.MaxFileSize=800mb

### Faz backup dos arquivos de log (apenas 1)
log4j.appender.fileOut.MaxBackupIndex=1

log4j.appender.fileOut.layout=org.apache.log4j.PatternLayout

#####este formato esta em ingles: 2011-04-24 e imprime o nro da linha L
###log4j.appender.fileOut.layout.ConversionPattern=%d [%t] %5p %c:%L - %m%n

####imprime no formato dia/mes/ano
log4j.appender.fileOut.layout.ConversionPattern=%-2d{dd/MM/yyyy HH:mm:ss}  %5p  %c:%L \u2013 %m%n
#log4j.appender.fileOut.layout.ConversionPattern=%-2d{dd/MM/yyyy HH:mm:ss} [%t] %5p %c:%L \u2013 %m%n
